/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Rent_Rover;

/**
 *
 * @author PC MOD NEPAL
 */
import Rent_Rover.DataBases.DB;
import java.awt.Color;
import Rent_Rover.GradientPanel;
import Rent_Rover.GradientPanel.Direction;
import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Image;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JMenuItem;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.SwingConstants;
import javax.swing.border.Border;

public class Customer_DashBoard_Logged extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Customer_DashBoard_Logged.class.getName());
    private javax.swing.JPopupMenu suggestionPopup = new javax.swing.JPopupMenu();

    /**
     * Creates new form Primary_Screen
     */
    private String username;
    public Customer_DashBoard_Logged(String pickup, String dropoff, String pickupDate, String dropoffDate, String username) {
    initComponents();
    
    // Store username for later use
    this.username = username;

    // Set booking details in fields/labels
    this.pickuplocation.setText(pickup);
    this.dropofflocation.setText(dropoff);
    this.dateField1.setText(pickupDate);
    this.dateField2.setText(dropoffDate);

    // Fetch and set profile picture and name using the username
    setProfilePicture(this.username);

    // âœ… Set layout for scrollablepanel
    scrollablepanel.setLayout(new BoxLayout(scrollablepanel, BoxLayout.Y_AXIS));
scrollablepanel.setBackground(Color.WHITE);
jScrollPane1.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
jScrollPane1.setViewportView(scrollablepanel);

// then call loadBookings() (you probably already do this)
loadBookings();
}



    private void setProfilePicture(String username) {
    try {
        // Set balance in label


        Connection con = DB.getConnection();
        String query = "SELECT profile_picture, balance FROM customer WHERE username = ?";
        PreparedStatement ps = con.prepareStatement(query);
        ps.setString(1, username);
        ResultSet rs = ps.executeQuery();

        if (rs.next()) {
            byte[] imgBytes = rs.getBytes("profile_picture");
            if (imgBytes != null) {
                ImageIcon imageIcon = new ImageIcon(imgBytes);
                Image image = imageIcon.getImage().getScaledInstance(pfp.getWidth(), pfp.getHeight(), Image.SCALE_SMOOTH);
                pfp.setIcon(new ImageIcon(image));
                CircularLabel.makeCircular(pfp);
            }
            int balance = rs.getInt("balance");
            Balance.setText("Rs " + balance);
        }

        rs.close();
        ps.close();
        con.close();
    } catch (Exception e) {
        e.printStackTrace();
    }
}

// Constructor to open dashboard with just username
public Customer_DashBoard_Logged(String username) {
    initComponents();
    this.username = username;
    setProfilePicture(username);  // load user info
    loadBookings();               // load rentals/vehicles
}

    public Customer_DashBoard_Logged() {
        initComponents();
        ImageScaler.setScaledImage(RR_logo, "C:\\Users\\PC MOD NEPAL\\OneDrive\\Desktop\\ProjectImages\\RR logo.png");
        scrollablepanel.setLayout(new BoxLayout(scrollablepanel, BoxLayout.Y_AXIS));
        scrollablepanel.setBackground(Color.WHITE);

    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // Method to load all bookings for the logged-in user


// Updated createBookingPanel to include owner username and make panel clickable
// Updated createBookingPanel to include hover effect and full click functionality
private JPanel createBookingPanel(String vehicleName, byte[] vehicleImage,
                                  String location, String createdAt,
                                  String pricePerDay, String ownerUsername,
                                  String bookedBy) { // no extra parameters

    final int CARD_HEIGHT = 150;
    final int CARD_WIDTH = 1000;

    JPanel panel = new JPanel(null);
    panel.setPreferredSize(new Dimension(CARD_WIDTH, CARD_HEIGHT));
    panel.setMaximumSize(new Dimension(Integer.MAX_VALUE, CARD_HEIGHT));
    panel.setAlignmentX(Component.LEFT_ALIGNMENT);
    panel.setBackground(Color.WHITE);
    panel.setBorder(BorderFactory.createLineBorder(Color.LIGHT_GRAY));

    // Vehicle image
    JLabel imageLabel = new JLabel();
    imageLabel.setBounds(10, 10, 130, 130);
    if (vehicleImage != null && vehicleImage.length > 0) {
        ImageIcon icon = new ImageIcon(vehicleImage);
        Image scaled = icon.getImage().getScaledInstance(imageLabel.getWidth(), imageLabel.getHeight(), Image.SCALE_SMOOTH);
        imageLabel.setIcon(new ImageIcon(scaled));
    } else {
        imageLabel.setText("No Image");
        imageLabel.setHorizontalAlignment(SwingConstants.CENTER);
        imageLabel.setVerticalAlignment(SwingConstants.CENTER);
        imageLabel.setBorder(BorderFactory.createLineBorder(Color.GRAY));
    }
    panel.add(imageLabel);

    // Vehicle name
    JLabel nameLabel = new JLabel(vehicleName);
    nameLabel.setFont(new Font("SansSerif", Font.BOLD, 16));
    nameLabel.setBounds(150, 10, 500, 26);
    panel.add(nameLabel);

    // Owner username
    JLabel ownerLabel = new JLabel("Owner: " + (ownerUsername == null ? "unknown" : ownerUsername));
    ownerLabel.setFont(new Font("SansSerif", Font.PLAIN, 13));
    ownerLabel.setBounds(150, 40, 300, 20);
    panel.add(ownerLabel);

    // Location + price
    JLabel locPrice = new JLabel("Location: " + location + "   |   Price/day: Rs " + pricePerDay);
    locPrice.setFont(new Font("SansSerif", Font.PLAIN, 13));
    locPrice.setBounds(150, 65, 600, 20);
    panel.add(locPrice);

    // Created at
    JLabel dateLabel = new JLabel("Listed On: " + createdAt);
    dateLabel.setFont(new Font("SansSerif", Font.PLAIN, 12));
    dateLabel.setForeground(Color.GRAY);
    dateLabel.setBounds(150, 95, 400, 18);
    panel.add(dateLabel);

    // Booking status label
    JLabel bookedByLabel = new JLabel();
    bookedByLabel.setFont(new Font("SansSerif", Font.BOLD, 13));
    bookedByLabel.setForeground(Color.BLUE);
    bookedByLabel.setBounds(150, 115, 400, 20);
    panel.add(bookedByLabel);

    Border defaultBorder = BorderFactory.createLineBorder(Color.LIGHT_GRAY);
    Border hoverBorder = BorderFactory.createLineBorder(new Color(0, 120, 215), 2);
    panel.setBorder(defaultBorder);

    // If already booked, show info and disable
    if (bookedBy != null && !bookedBy.trim().isEmpty()) {
        bookedByLabel.setText("Booked by: " + bookedBy);
        panel.setBackground(new Color(240, 240, 240));
        panel.setBorder(BorderFactory.createLineBorder(Color.GRAY));
        panel.setEnabled(false);
        return panel;
    }

    // Allow booking
    panel.addMouseListener(new java.awt.event.MouseAdapter() {
        @Override
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            try {
                int price = Integer.parseInt(pricePerDay.trim());
                String currentUsername = username; // logged-in user

                if (ownerUsername.equalsIgnoreCase(currentUsername)) {
                    JOptionPane.showMessageDialog(null, "You cannot book your own vehicle!");
                    return;
                }

                int confirm = JOptionPane.showConfirmDialog(null,
                        "Do you want to book this vehicle for Rs " + price + "?",
                        "Confirm Booking", JOptionPane.YES_NO_OPTION);

                if (confirm == JOptionPane.YES_OPTION) {
                    Connection con = DB.getConnection();

                    // Check balance of current user
                    PreparedStatement ps = con.prepareStatement("SELECT balance FROM customer WHERE username = ?");
                    ps.setString(1, currentUsername);
                    ResultSet rs = ps.executeQuery();

                    if (rs.next()) {
                        int balance = rs.getInt("balance");

                        if (balance < price) {
                            JOptionPane.showMessageDialog(null, "Not enough balance to book this vehicle!");
                            rs.close();
                            ps.close();
                            con.close();
                            return;
                        }

                        int remaining = balance - price;

                        // Deduct balance from current user
                        PreparedStatement updateBalance = con.prepareStatement(
                                "UPDATE customer SET balance = ? WHERE username = ?");
                        updateBalance.setInt(1, remaining);
                        updateBalance.setString(2, currentUsername);
                        updateBalance.executeUpdate();

                        // Credit the owner
                        PreparedStatement creditOwner = con.prepareStatement(
                                "UPDATE customer SET balance = balance + ? WHERE username = ?");
                        creditOwner.setInt(1, price);
                        creditOwner.setString(2, ownerUsername);
                        creditOwner.executeUpdate();
                        creditOwner.close();

                        // Mark booking as booked
                        PreparedStatement markBooked = con.prepareStatement(
                                "UPDATE bookings SET booked_by = ? WHERE brand = ? AND model = ?");
                        String[] parts = vehicleName.split(" ", 2);
                        String brand = parts.length > 0 ? parts[0] : "";
                        String model = parts.length > 1 ? parts[1] : "";

                        markBooked.setString(1, currentUsername);
                        markBooked.setString(2, brand);
                        markBooked.setString(3, model);
                        markBooked.executeUpdate();

                        JOptionPane.showMessageDialog(null, "Booking confirmed!\nRemaining Balance: Rs " + remaining);

                        bookedByLabel.setText("Booked by: " + currentUsername);
                        panel.setBackground(new Color(240, 240, 240));
                        panel.setEnabled(false);

                        rs.close();
                        ps.close();
                        updateBalance.close();
                        markBooked.close();
                        con.close();
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
            }
        }

        @Override
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            panel.setBackground(new Color(245, 247, 250));
            panel.setBorder(hoverBorder);
            panel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        }

        @Override
        public void mouseExited(java.awt.event.MouseEvent evt) {
            panel.setBackground(Color.WHITE);
            panel.setBorder(defaultBorder);
            panel.setCursor(Cursor.getDefaultCursor());
        }
    });

    return panel;
}



// Updated loadBookings: no filtering by username, display all
public void loadBookings() {
    scrollablepanel.removeAll();

    final int CARD_HEIGHT = 150;
    final int GAP = 10;
    int count = 0;

    try {
        Connection con = DB.getConnection();

        String query = "SELECT username, brand, model, location, price_per_day, vehicle_image, created_at, booked_by FROM bookings ORDER BY created_at DESC";
        PreparedStatement ps = con.prepareStatement(query);
        ResultSet rs = ps.executeQuery();

        while (rs.next()) {
            count++;
            String vehicleName = rs.getString("brand") + " " + rs.getString("model");
            byte[] imageBytes = rs.getBytes("vehicle_image");
            String location = rs.getString("location");
            String createdAt = rs.getString("created_at");
            String price = rs.getString("price_per_day");
            String owner = rs.getString("username");
            String bookedBy = rs.getString("booked_by");

            JPanel card = createBookingPanel(vehicleName, imageBytes, location, createdAt, price, owner, bookedBy);

            scrollablepanel.add(card);
            scrollablepanel.add(javax.swing.Box.createRigidArea(new Dimension(0, GAP)));
        }

        rs.close();
        ps.close();
        con.close();
    } catch (Exception e) {
        e.printStackTrace();
    }

    int totalHeight = Math.max(1, count) * (CARD_HEIGHT + GAP) + 20;
    int width = jScrollPane1.getViewport().getWidth();
    if (width <= 0) width = 1000;

    scrollablepanel.setPreferredSize(new Dimension(width, totalHeight));
    scrollablepanel.revalidate();
    scrollablepanel.repaint();

    System.out.println("loadBookings -> cards: " + count + " totalHeight: " + totalHeight + " viewportH: " + jScrollPane1.getViewport().getHeight());
}











    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bottom = new javax.swing.JPanel();
        whitepanel = new ImageScalerP("C:\\Users\\PC MOD NEPAL\\OneDrive\\Desktop\\ProjectImages\\whitebg.jpg");
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        RR_logo = new javax.swing.JLabel();
        homee = new javax.swing.JLabel();
        renter = new javax.swing.JLabel();
        pfp = new javax.swing.JLabel();
        yourRentals = new javax.swing.JLabel();
        load_balance = new javax.swing.JLabel();
        blc = new javax.swing.JLabel();
        Balance = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        book = new ImageScalerP("C:\\Users\\PC MOD NEPAL\\OneDrive\\Desktop\\ProjectImages\\whitebg.jpg");
        pickuploc = new RoundedPanel(25);
        pickuplocation = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        pickupdate = new RoundedPanel(25);
        dateField1 = new RoundedTextField(25);
        jLabel5 = new javax.swing.JLabel();
        dropoffdate = new RoundedPanel(25);
        dateField2 = new RoundedTextField(25);
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new RoundedPanel(25);
        dropofflocation = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        scrollablepanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        bottom.setBackground(new java.awt.Color(204, 204, 204));

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel2.setText("Rent, Ride, Repeat");

        jLabel1.setFont(new java.awt.Font("Perpetua", 3, 36)); // NOI18N
        jLabel1.setText("RentRover");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        RR_logo.setMaximumSize(new java.awt.Dimension(76, 51));

        homee.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        homee.setText("Home");
        homee.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        homee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeeMouseClicked(evt);
            }
        });

        renter.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        renter.setText("Become a Renter");
        renter.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        renter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                renterMouseClicked(evt);
            }
        });

        yourRentals.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        yourRentals.setText("Your Rentals");
        yourRentals.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        yourRentals.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                yourRentalsMouseClicked(evt);
            }
        });

        load_balance.setForeground(new java.awt.Color(0, 204, 255));
        load_balance.setText("Load Balance");
        load_balance.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        load_balance.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                load_balanceMouseClicked(evt);
            }
        });

        blc.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        blc.setText("Balance:");

        Balance.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel8.setText("Bookings");
        jLabel8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout whitepanelLayout = new javax.swing.GroupLayout(whitepanel);
        whitepanel.setLayout(whitepanelLayout);
        whitepanelLayout.setHorizontalGroup(
            whitepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(whitepanelLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(RR_logo, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(whitepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(whitepanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel2))
                    .addGroup(whitepanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(85, 85, 85)
                        .addComponent(homee)
                        .addGap(49, 49, 49)
                        .addComponent(blc)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(whitepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(whitepanelLayout.createSequentialGroup()
                        .addComponent(Balance, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addGap(68, 68, 68)
                        .addComponent(yourRentals)
                        .addGap(45, 45, 45)
                        .addComponent(renter)
                        .addGap(80, 80, 80))
                    .addGroup(whitepanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(load_balance)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(pfp, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        whitepanelLayout.setVerticalGroup(
            whitepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, whitepanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(whitepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RR_logo, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(whitepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(pfp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, whitepanelLayout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(24, 24, 24))
            .addGroup(whitepanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(whitepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Balance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(whitepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(renter)
                        .addComponent(yourRentals)
                        .addComponent(homee, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(blc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(load_balance)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        book.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        book.setOpaque(false);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Pick up Location");

        javax.swing.GroupLayout pickuplocLayout = new javax.swing.GroupLayout(pickuploc);
        pickuploc.setLayout(pickuplocLayout);
        pickuplocLayout.setHorizontalGroup(
            pickuplocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pickuplocLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pickuplocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pickuplocation, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                    .addGroup(pickuplocLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pickuplocLayout.setVerticalGroup(
            pickuplocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pickuplocLayout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pickuplocation, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        dateField1.setFont(new java.awt.Font("Perpetua", 0, 14)); // NOI18N
        dateField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dateField1MouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Pick up Date");

        javax.swing.GroupLayout pickupdateLayout = new javax.swing.GroupLayout(pickupdate);
        pickupdate.setLayout(pickupdateLayout);
        pickupdateLayout.setHorizontalGroup(
            pickupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pickupdateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pickupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateField1, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                    .addGroup(pickupdateLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pickupdateLayout.setVerticalGroup(
            pickupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pickupdateLayout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateField1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        dateField2.setFont(new java.awt.Font("Perpetua", 0, 14)); // NOI18N
        dateField2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dateField2MouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Return Date");

        javax.swing.GroupLayout dropoffdateLayout = new javax.swing.GroupLayout(dropoffdate);
        dropoffdate.setLayout(dropoffdateLayout);
        dropoffdateLayout.setHorizontalGroup(
            dropoffdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropoffdateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dropoffdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateField2, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                    .addGroup(dropoffdateLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        dropoffdateLayout.setVerticalGroup(
            dropoffdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dropoffdateLayout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateField2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Drop off Location");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dropofflocation, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dropofflocation, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel7.setText("Details");

        javax.swing.GroupLayout bookLayout = new javax.swing.GroupLayout(book);
        book.setLayout(bookLayout);
        bookLayout.setHorizontalGroup(
            bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pickuploc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pickupdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dropoffdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(bookLayout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bookLayout.setVerticalGroup(
            bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(pickuploc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pickupdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dropoffdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(129, 129, 129))
        );

        javax.swing.GroupLayout scrollablepanelLayout = new javax.swing.GroupLayout(scrollablepanel);
        scrollablepanel.setLayout(scrollablepanelLayout);
        scrollablepanelLayout.setHorizontalGroup(
            scrollablepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1014, Short.MAX_VALUE)
        );
        scrollablepanelLayout.setVerticalGroup(
            scrollablepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 641, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(scrollablepanel);

        javax.swing.GroupLayout bottomLayout = new javax.swing.GroupLayout(bottom);
        bottom.setLayout(bottomLayout);
        bottomLayout.setHorizontalGroup(
            bottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(whitepanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bottomLayout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addComponent(book, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1016, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        bottomLayout.setVerticalGroup(
            bottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(whitepanel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(bottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(book, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 643, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(bottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bottom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dateField2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateField2MouseClicked
        com.toedter.calendar.JCalendar calendar = new com.toedter.calendar.JCalendar();

        // Create a dialog to hold the calendar
        JDialog dialog = new JDialog();
        dialog.setModal(true);
        dialog.setTitle("Select Date");
        dialog.getContentPane().add(calendar);
        dialog.pack();
        dialog.setLocationRelativeTo(dateField2);

        // Add a listener to detect date selection
        calendar.addPropertyChangeListener("calendar", evt2 -> {
            java.util.Calendar selected = calendar.getCalendar();
            java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("yyyy-MM-dd");
            dateField2.setText(sdf.format(selected.getTime()));
            dialog.dispose(); // close the dialog after selection
        });

        dialog.setVisible(true);
    }//GEN-LAST:event_dateField2MouseClicked

    private void dateField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateField1MouseClicked
        // Create a calendar dialog
        com.toedter.calendar.JCalendar calendar = new com.toedter.calendar.JCalendar();

        // Create a dialog to hold the calendar
        JDialog dialog = new JDialog();
        dialog.setModal(true);
        dialog.setTitle("Select Date");
        dialog.getContentPane().add(calendar);
        dialog.pack();
        dialog.setLocationRelativeTo(dateField1);

        // Add a listener to detect date selection
        calendar.addPropertyChangeListener("calendar", evt2 -> {
            java.util.Calendar selected = calendar.getCalendar();
            java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("yyyy-MM-dd");
            dateField1.setText(sdf.format(selected.getTime()));
            dialog.dispose(); // close the dialog after selection
        });

        dialog.setVisible(true);
    }//GEN-LAST:event_dateField1MouseClicked

    private void renterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_renterMouseClicked
        try {
        

        // âœ… Pass booking details AND username to dashboard
        RenterDashBoard renter = new RenterDashBoard(
            this.username
        );
        this.dispose();
        renter.setVisible(true);
        

    } catch (Exception ex) {
        ex.printStackTrace();
        StylishPopup.showError(this, "Error: " + ex.getMessage());
    }
    }//GEN-LAST:event_renterMouseClicked

    private void homeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeeMouseClicked
        loadBookings();
    }//GEN-LAST:event_homeeMouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        loadBookings();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void yourRentalsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yourRentalsMouseClicked
    Own_Rentals rentals = new Own_Rentals(this.username);
    rentals.setVisible(true);
    this.dispose();
    }//GEN-LAST:event_yourRentalsMouseClicked

    private void load_balanceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_load_balanceMouseClicked
        try {
        // Ask user how much they want to load
        String input = JOptionPane.showInputDialog(this, "Enter amount to load:", "Load Balance", JOptionPane.PLAIN_MESSAGE);
        
        if (input != null && !input.trim().isEmpty()) {
            int amountToAdd = Integer.parseInt(input.trim());
            
            if (amountToAdd <= 0) {
                JOptionPane.showMessageDialog(this, "Please enter a valid amount!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Update balance in database
            Connection con = DB.getConnection();
            String updateQuery = "UPDATE customer SET balance = balance + ? WHERE username = ?";
            PreparedStatement ps = con.prepareStatement(updateQuery);
            ps.setInt(1, amountToAdd);
            ps.setString(2, username);
            ps.executeUpdate();

            ps.close();

            // Fetch updated balance
            String fetchQuery = "SELECT balance FROM customer WHERE username = ?";
            ps = con.prepareStatement(fetchQuery);
            ps.setString(1, username);
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                int newBalance = rs.getInt("balance");
                Balance.setText("Rs " + newBalance);
                JOptionPane.showMessageDialog(this, "Balance successfully updated!", "Success", JOptionPane.INFORMATION_MESSAGE);
            }

            rs.close();
            ps.close();
            con.close();
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Please enter a valid number!", "Error", JOptionPane.ERROR_MESSAGE);
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error updating balance: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_load_balanceMouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        your_bookings rentals = new your_bookings(this.username);
    rentals.setVisible(true);
    this.dispose();
    }//GEN-LAST:event_jLabel8MouseClicked
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       
        java.awt.EventQueue.invokeLater(() -> new Customer_DashBoard_Logged().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Balance;
    private javax.swing.JLabel RR_logo;
    private javax.swing.JLabel blc;
    private javax.swing.JPanel book;
    private javax.swing.JPanel bottom;
    private javax.swing.JTextField dateField1;
    private javax.swing.JTextField dateField2;
    private javax.swing.JPanel dropoffdate;
    private javax.swing.JTextField dropofflocation;
    private javax.swing.JLabel homee;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel load_balance;
    private javax.swing.JLabel pfp;
    private javax.swing.JPanel pickupdate;
    private javax.swing.JPanel pickuploc;
    private javax.swing.JTextField pickuplocation;
    private javax.swing.JLabel renter;
    private javax.swing.JPanel scrollablepanel;
    private javax.swing.JPanel whitepanel;
    private javax.swing.JLabel yourRentals;
    // End of variables declaration//GEN-END:variables
}
